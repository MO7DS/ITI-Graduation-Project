{
  "info": {
    "_postman_id": "fed1afaa-da9f-482a-bad0-ea59792eb73e",
    "name": "E-Commerce API",
    "description": "Postman collection for the E-Commerce backend API.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5500"
    },
    {
      "key": "JWT_TOKEN",
      "value": ""
    },
    {
      "key": "USER_ROLE",
      "value": ""
    },
    {
      "key": "USER_EMAIL",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/signup",
              "host": ["{{baseUrl}}"],
              "path": ["signup"]
            },
            "description": "Register a new user"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "    pm.collectionVariables.set(\"JWT_TOKEN\", jsonData.token);",
                  "    pm.collectionVariables.set(\"USER_ROLE\", jsonData.user.role);",
                  "    pm.collectionVariables.set(\"USER_EMAIL\", jsonData.user.email);",
                  "    console.log(\"Token stored: \" + jsonData.token);",
                  "    console.log(\"User role: \" + jsonData.user.role);",
                  "} else {",
                  "    console.log(\"Signup failed: \" + pm.response.text());",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            },
            "description": "Login with existing credentials"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "const jsonData = pm.response.json();",
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set(\"JWT_TOKEN\", jsonData.token);",
                  "    pm.collectionVariables.set(\"USER_ROLE\", jsonData.user.role);",
                  "    pm.collectionVariables.set(\"USER_EMAIL\", jsonData.user.email);",
                  "    console.log(\"Token stored: \" + jsonData.token);",
                  "    console.log(\"User role: \" + jsonData.user.role);",
                  "} else {",
                  "    console.log(\"Login failed: \" + pm.response.text());",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Get the current user's profile"
          }
        },
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/all",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "all"]
            },
            "description": "Admin endpoint to get all users"
          }
        },
        {
          "name": "Delete User (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/:id",
              "host": ["{{baseUrl}}"],
              "path": ["admin", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "userId",
                  "description": "ID of the user to delete"
                }
              ]
            },
            "description": "Admin endpoint to delete a user"
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?category=electronics&price=1000&sort=asc&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "category",
                  "value": "electronics",
                  "description": "Filter by category"
                },
                {
                  "key": "price",
                  "value": "1000",
                  "description": "Maximum price"
                },
                {
                  "key": "sort",
                  "value": "asc",
                  "description": "Sort by price (asc/desc)"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Get all products with filters, sorting, and pagination"
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "productId",
                  "description": "ID of the product"
                }
              ]
            },
            "description": "Get a specific product by ID"
          }
        },
        {
          "name": "Create Product (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"New Product\",\n    \"description\": \"Product description\",\n    \"price\": 99.99,\n    \"SKU\": \"PROD123\",\n    \"category\": \"electronics\",\n    \"colors\": [\n        {\n            \"color\": \"Black\",\n            \"stock\": 10,\n            \"images\": [\n                {\n                    \"url\": \"https://example.com/image1.jpg\",\n                    \"alt\": \"Product image\",\n                    \"is_featured\": true\n                }\n            ]\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            },
            "description": "Create a new product (Admin only)"
          }
        },
        {
          "name": "Update Product (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Product\",\n    \"price\": 149.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "productId",
                  "description": "ID of the product to update"
                }
              ]
            },
            "description": "Update an existing product (Admin only)"
          }
        },
        {
          "name": "Delete Product (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{JWT_TOKEN}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "productId",
                  "description": "ID of the product to delete"
                }
              ]
            },
            "description": "Delete a product (Admin only)"
          }
        }
      ]
    }
  ]
}
